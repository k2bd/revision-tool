[{"/Users/kevin.duff/dev/revision-aid/src/index.tsx":"1","/Users/kevin.duff/dev/revision-aid/src/store/reducer.ts":"2","/Users/kevin.duff/dev/revision-aid/src/App.tsx":"3","/Users/kevin.duff/dev/revision-aid/src/store/actionTypes.ts":"4","/Users/kevin.duff/dev/revision-aid/src/store/actionCreators.ts":"5","/Users/kevin.duff/dev/revision-aid/src/components/Section.tsx":"6","/Users/kevin.duff/dev/revision-aid/src/components/Topic.tsx":"7","/Users/kevin.duff/dev/revision-aid/src/data.ts":"8"},{"size":661,"mtime":1609795271656,"results":"9","hashOfConfig":"10"},{"size":1578,"mtime":1609801850574,"results":"11","hashOfConfig":"10"},{"size":1819,"mtime":1609799830883,"results":"12","hashOfConfig":"10"},{"size":53,"mtime":1609794959171,"results":"13","hashOfConfig":"10"},{"size":338,"mtime":1609795231244,"results":"14","hashOfConfig":"10"},{"size":1842,"mtime":1609802030068,"results":"15","hashOfConfig":"10"},{"size":408,"mtime":1609799951023,"results":"16","hashOfConfig":"10"},{"size":7093,"mtime":1609801807229,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"10hwg1j",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kevin.duff/dev/revision-aid/src/index.tsx",[],["36","37"],"/Users/kevin.duff/dev/revision-aid/src/store/reducer.ts",["38","39","40"],"import { ALERT_BODY } from \"@blueprintjs/core/lib/esm/common/classes\"\nimport { isLiteralTypeNode } from \"typescript\"\nimport * as actionTypes from \"./actionTypes\"\nimport {SECTION_A, SECTION_B, SECTION_C, availableIssues} from \"../data\"\n\n\nconst initialState: RevisionState = {\n    sections: [\n        {\n            title: SECTION_A,\n            topics: [],\n        },\n        {\n            title: SECTION_B,\n            topics: [],\n        },\n        {\n            title: SECTION_C,\n            topics: [],\n        },\n    ]\n}\n\n\nconst random_issues_for_section = (action: RevisionAction, state: RevisionState) => {\n    const available_issues = [...availableIssues(action.section.title)]\n\n    let newTopics: ITopic[] = available_issues\n        .map((a) => ({sort: Math.random(), value: a}))\n        .sort((a, b) => a.sort - b.sort)\n        .map((a) => ({name: a.value}))\n        .slice(0, 5)\n\n    let newSections = state.sections.map(\n        (section: ISection) => {\n            if (section.title == action.section.title) {\n                return {\n                    ...section,\n                    topics: newTopics,\n                }\n            } else {\n                return section\n            }\n        }\n    )\n\n    return {\n        ...state,\n        sections: newSections,\n    }\n}\n\n\nconst reducer = (\n    state: RevisionState = initialState,\n    action: RevisionAction,\n): RevisionState => {\n    switch(action.type) {\n        case actionTypes.GET_RANDOM_ISSUES:\n            return random_issues_for_section(action, state)\n    }\n    return state\n}\n\nexport default reducer\n","/Users/kevin.duff/dev/revision-aid/src/App.tsx",["41"],"/Users/kevin.duff/dev/revision-aid/src/store/actionTypes.ts",[],"/Users/kevin.duff/dev/revision-aid/src/store/actionCreators.ts",[],"/Users/kevin.duff/dev/revision-aid/src/components/Section.tsx",["42","43"],"/Users/kevin.duff/dev/revision-aid/src/components/Topic.tsx",["44","45","46","47"],"/Users/kevin.duff/dev/revision-aid/src/data.ts",["48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":20},{"ruleId":"53","severity":1,"message":"57","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":27},{"ruleId":"58","severity":1,"message":"59","line":36,"column":31,"nodeType":"60","messageId":"61","endLine":36,"endColumn":33},{"ruleId":"62","severity":1,"message":"63","line":21,"column":9,"nodeType":"64","endLine":21,"endColumn":36,"suggestions":"65"},{"ruleId":"53","severity":1,"message":"66","line":3,"column":10,"nodeType":"55","messageId":"56","endLine":3,"endColumn":22},{"ruleId":"53","severity":1,"message":"67","line":3,"column":37,"nodeType":"55","messageId":"56","endLine":3,"endColumn":48},{"ruleId":"53","severity":1,"message":"68","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":18},{"ruleId":"53","severity":1,"message":"66","line":3,"column":10,"nodeType":"55","messageId":"56","endLine":3,"endColumn":22},{"ruleId":"53","severity":1,"message":"69","line":3,"column":24,"nodeType":"55","messageId":"56","endLine":3,"endColumn":35},{"ruleId":"53","severity":1,"message":"67","line":3,"column":37,"nodeType":"55","messageId":"56","endLine":3,"endColumn":48},{"ruleId":"70","severity":1,"message":"71","line":142,"column":5,"nodeType":"72","messageId":"73","endLine":142,"endColumn":33},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"@typescript-eslint/no-unused-vars","'ALERT_BODY' is defined but never used.","Identifier","unusedVar","'isLiteralTypeNode' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useCallback has an unnecessary dependency: 'getRandomIssues'. Either exclude it or remove the dependency array. Outer scope values like 'getRandomIssues' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["76"],"'shallowEqual' is defined but never used.","'useSelector' is defined but never used.","'Dispatch' is defined but never used.","'useDispatch' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [dispatch]",{"range":"79","text":"80"},[686,713],"[dispatch]"]